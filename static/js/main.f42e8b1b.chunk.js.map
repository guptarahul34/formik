{"version":3,"sources":["Components/YoutubeForm.js","App.js","index.js"],"names":["validationSchema","Yup","name","required","min","max","label","email","channel","YoutubeForm","formik","useFormik","initialValues","onSubmit","values","alert","handleReset","className","handleSubmit","htmlFor","type","value","onChange","handleChange","onBlur","handleBlur","autoComplete","touched","errors","App","ReactDOM","render","document","getElementById"],"mappings":"kLAIMA,EAAmBC,IAAW,CAChCC,KAAMD,MAAaE,WAAWC,IAAI,GAAGC,IAAI,IAAIC,MAAM,UACnDC,MAAON,MAAaM,MAAM,oBAAoBJ,WAAWG,MAAM,SAC/DE,QAASP,MAAaE,SAAS,eAAeG,MAAM,aAAaF,IAAI,KAyG1DK,MAtGf,WACQ,IAAMC,EAASC,YAAU,CACrBC,cAAc,CACVV,KAAK,GACLK,MAAM,GACNC,QAAQ,IAEZK,SAAU,SAAAC,GAENC,MAAM,qBAAD,OAAsBL,EAAOI,OAAOZ,KAApC,2BAA2DQ,EAAOI,OAAOP,MAAzE,kCAAwGG,EAAOI,OAAON,QAAtH,MACLE,EAAOM,eAEXhB,qBAuBR,OACI,qCACA,qBAAIiB,UAAU,+BAAd,cAA8C,gEAA9C,OACA,sBAAMJ,SAAUH,EAAOQ,aAAvB,SACA,sBAAKD,UAAU,GAAf,UACA,qBAAKA,UAAU,mCAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOE,QAAQ,OAAf,oBACA,uBACAC,KAAK,OACJC,MAAOX,EAAOI,OAAOZ,KACtBoB,SAAUZ,EAAOa,aACjBC,OAAQd,EAAOe,WACfvB,KAAK,OACLe,UAAU,eACVS,aAAa,QACb,sBAAMT,UAAU,MAAhB,sDAEJ,qBAAKA,UAAU,kBAAf,SAAmCP,EAAOiB,QAAQzB,KAAQQ,EAAOkB,OAAO1B,KAAO,YAGvF,qBAAKe,UAAU,6BAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOE,QAAQ,QAAf,qBACA,uBACAC,KAAK,OACJC,MAAOX,EAAOI,OAAOP,MACtBe,SAAUZ,EAAOa,aACjBC,OAAQd,EAAOe,WACfvB,KAAK,QACLe,UAAU,eACVS,aAAa,WAGjB,qBAAKT,UAAU,kBAAf,SAAmCP,EAAOiB,QAAQpB,MAASG,EAAOkB,OAAOrB,MAAQ,YAGzF,qBAAKU,UAAU,6BAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOE,QAAQ,UAAf,uBACA,uBACAC,KAAK,OACJC,MAAOX,EAAOI,OAAON,QACtBc,SAAUZ,EAAOa,aACjBC,OAAQd,EAAOe,WACfvB,KAAK,UACLe,UAAU,eACVS,aAAa,WAGjB,qBAAKT,UAAU,kBAAf,SAAmCP,EAAOiB,QAAQnB,QAAWE,EAAOkB,OAAOpB,QAAU,YAG1F,qBAAKS,UAAU,kCAAf,SACK,qBAAKA,UAAU,WAAf,SACK,wBAAQG,KAAK,SAASH,UAAU,4BAAhC,iCC3FNY,MARf,WACE,OACE,mCACI,cAAC,EAAD,O,OCARC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f42e8b1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required().min(2).max(10).label(\" Name \"),\r\n    email: Yup.string().email(\" Invalid Email! \").required().label(\"Email\"),\r\n    channel: Yup.string().required(\" Required! \").label(\" Channel \").min(7)\r\n})\r\n\r\nfunction YoutubeForm() {\r\n        const formik = useFormik({\r\n            initialValues:{\r\n                name:\"\",\r\n                email:\"\",\r\n                channel:\"\"\r\n            },\r\n            onSubmit: values =>{\r\n                // console.log(values);\r\n                alert(`my name is name = ${formik.values.name} and My Email = ${formik.values.email} and My Channel Name - ${formik.values.channel} `)\r\n                formik.handleReset();\r\n            },\r\n            validationSchema\r\n            // validate: values =>{\r\n            //     let errors = {}\r\n            //         let name = values.name;\r\n                   \r\n            //     if(!values.name){\r\n            //         errors.name = \" Required* \"\r\n            //     }else if(!(name.charCodeAt(0) >=65 && name.charCodeAt(0)<=90)){\r\n            //         errors.name = ' Please Enter Valid Name '\r\n            //     }\r\n\r\n            //     if(!values.email){\r\n            //         errors.email = \" Required* \"\r\n            //     }\r\n\r\n            //     if(!values.channel){\r\n            //         errors.channel = \" Required* \"\r\n            //     }\r\n\r\n            //     return errors;\r\n            // }\r\n        })\r\n        // console.log(formik.touched);\r\n    return (\r\n        <>\r\n        <h1 className=\"text-center p-2 text-success\"> <i> Formik Example By Rahul Gupta </i> </h1>\r\n        <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"\">\r\n        <div className=\"row justify-content-center pt-2 \">\r\n            <div className=\"col-lg-3 col-md-4 col-sm-12 pt-1\">\r\n                <div className=\"form-group p-2\">\r\n                    <label htmlFor=\"name\"> Name </label> \r\n                    <input \r\n                    type=\"text\"\r\n                     value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    name=\"name\" \r\n                    className=\"form-control\"\r\n                    autoComplete=\"off\" />\r\n                    <span className=\"m-2\">First Letter Must Be Capital Of Name </span>\r\n                </div>\r\n                <div className=\"text-danger p-2\">{(formik.touched.name) ? formik.errors.name : null}</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-3 col-md-4 col-sm-12 mt-1\">\r\n                <div className=\"form-group p-2\">\r\n                    <label htmlFor=\"email\"> Email </label>\r\n                    <input \r\n                    type=\"text\"\r\n                     value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    name=\"email\" \r\n                    className=\"form-control\" \r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"text-danger p-2\">{(formik.touched.email) ? formik.errors.email : null}</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-3 col-md-4 col-sm-12 mt-1\">\r\n                <div className=\"form-group p-2\">\r\n                    <label htmlFor=\"channel\"> Channel </label>\r\n                    <input \r\n                    type=\"text\"\r\n                     value={formik.values.channel}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    name=\"channel\" \r\n                    className=\"form-control\" \r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"text-danger p-2\">{(formik.touched.channel) ? formik.errors.channel : null}</div>\r\n            </div>\r\n        </div>\r\n           <div className=\"row justify-content-center mt-4\">\r\n                <div className=\"col-lg-3\">\r\n                     <button type=\"submit\" className=\"btn btn-success rounded-5\">Submit</button>\r\n                </div>\r\n           </div>\r\n           </div>\r\n    </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default YoutubeForm;\r\n","import React from \"react\";\nimport YoutubeForm from \"./Components/YoutubeForm\";\n\n\nfunction App() {\n  return (\n    <>\n        <YoutubeForm  />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}